#!/usr/bin/env bash

DEFAULT_SESSION="development"
SH_CMD="exec bash"
WORK_PUPPETCMD="cd ${WORK_DIR}/puppet; ${SH_CMD}"

function trimSession() {
  local name=$1;
  echo ${1};
}

# This should only ever return either "0" or "1"
function tmuxSessionMatches() {
  local name=$1;
  trimSession $(tmux ls | grep "^${name}$" | wc -l);
}

function configureWindows() {
  tmux set-window-option -t ${DEFAULT_SESSION} -g automatic-rename off;
  tmux new-window        -t ${DEFAULT_SESSION}:0 -k -n devops "${WORK_PUPPETCMD}";
  tmux split-window -h   -t ${DEFAULT_SESSION}:0 "${WORK_PUPPETCMD}";
  tmux split-window -v   -t ${DEFAULT_SESSION}:0 "${WORK_PUPPETCMD}";
}

tmux start-server
if [[ -z $TMUX ]]; then
  if [ ! -z "$SSHAGENT" ]; then
    echo "Starting ssh-agent ${SSH_AUTH_SOCK}...";
    CMD="$SSHAGENT $SSHAGENTARGS"
    echo "Evaluating $CMD"
    SSHAGENTOUT=$($CMD)
    echo "Output $SSHAGENTOUT"
    eval $SSHAGENTOUT;
  fi

  if [[ "0" == $(tmuxSessionMatches ${DEFAULT_SESSION}) ]]; then
    echo "Launching tmux base session ${DEFAULT_SESSION}...";
    tmux new-session -d -s ${DEFAULT_SESSION};
    configureWindows;
    tmux attach -t ${DEFAULT_SESSION};
  else
    echo "Launching synced copy of base session ${DEFAULT_SESSION}...";
    sid="${DEFAULT_SESSION}-$(date +%Y%m%d%H%M%S)";
    tmux new-session -d -t ${sid} -s ${DEFAULT_SESSION};
    configureWindows;
    tmux attach -t ${sid};
  fi
fi
